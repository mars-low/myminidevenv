{
    "omnisharp.enableAsyncCompletion": true,
    "editor.inlineSuggest.enabled": true,
    "git.autofetch": true,
    "search.searchEditor.defaultNumberOfContextLines": 3,
    "search.searchEditor.reusePriorSearchConfiguration": true,
    "gitlens.codeLens.includeSingleLineSymbols": true,
    "git.useCommitInputAsStashMessage": true,
    "git.detectSubmodulesLimit": 20,
    "terminal.integrated.shellIntegration.enabled": true,
    "workbench.localHistory.maxFileEntries": 20,
    "files.simpleDialog.enable": true,
    "workbench.editor.revealIfOpen": true,
    "workbench.editor.sharedViewState": true,
    "editor.definitionLinkOpensInPeek": true,
    "terminal.integrated.copyOnSelection": true,
    "terminal.integrated.fastScrollSensitivity": 20,
    "terminal.integrated.rightClickBehavior": "selectWord",
    "terminal.integrated.shellIntegration.history": 10000,
    "terminal.integrated.tabs.hideCondition": "singleGroup",
    "terminal.integrated.tabs.separator": ":",
    "terminal.integrated.tabs.title": "${cwdFolder}",
    "terminal.integrated.tabs.description": "${task}${separator}${local}",
    "window.titleSeparator": " # ",
    "window.title": "${dirty}${activeFolderMedium}${separator}${rootName}",
    "terminal.integrated.fontFamily": "monospace",
    "editor.formatOnSaveMode": "modifications",
    "terminal.integrated.scrollback": 100000,
    "notebook.lineNumbers": "on",
    "workbench.editor.enablePreviewFromQuickOpen": true,
    "zenMode.hideLineNumbers": false,
    "zenMode.centerLayout": false,
    "editor.renderWhitespace": "all",
    "terminal.integrated.defaultProfile.linux": "zsh",
    "workbench.panel.defaultLocation": "right",
    "terminal.integrated.enablePersistentSessions": false,
    "diffEditor.renderSideBySide": false,
    "editor.stickyScroll.enabled": true,
    "gitlens.views.repositories.includeWorkingTree": true,
    "scm.repositories.visible": 0,
    "gitlens.views.repositories.showIncomingActivity": true,
    "gitlens.advanced.repositorySearchDepth": 1,
    "hexeditor.columnWidth": 16,
    "hexeditor.showDecodedText": true,
    "hexeditor.defaultEndianness": "little",
    "hexeditor.inspectorType": "aside",
    "editor.fontFamily": "'JetBrainsMono Nerd Font','Droid Sans Mono', 'monospace', monospace",
    "editor.codeLensFontFamily": "JetBrainsMono Nerd Font",
    "editor.fontLigatures": true,
    "scm.inputFontFamily": "editor",
    "debug.console.fontFamily": "JetBrainsMono Nerd Font",
    "workbench.localHistory.maxFileSize": 512,
    "git.smartCommitChanges": "tracked",
    "redhat.telemetry.enabled": false,
    "files.watcherExclude": {
        "**/.codechecker": true,
        "**/.git": true,
        "**/.venv*": true,
        "**/node_modules": true,
    },
    "git.branchProtection": [
        "master",
        "main"
    ],
    "git.terminalGitEditor": true,
    "gitlens.graph.dimMergeCommits": true,
    "workbench.localHistory.mergeWindow": 60,
    "diffEditor.diffAlgorithm": "advanced",
    "diffEditor.codeLens": true,
    "debug.openDebug": "openOnDebugBreak",
    "editor.tabCompletion": "off",
    "files.defaultLanguage": "",
    "editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
    "editor.minimap.autohide": true,
    "diffEditor.ignoreTrimWhitespace": false,
    "workbench.editorAssociations": {
        "*.png": "imagePreview.previewEditor",
        "*.jpg": "imagePreview.previewEditor",
        "*.md": "default"
    },
    "workbench.colorTheme": "Default Dark Modern",
    "gitlens.plusFeatures.enabled": false,
    "gitlens.views.repositories.compact": true,
    "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
    "editor.guides.bracketPairs": true,
    "editor.linkedEditing": true,
    "workbench.quickOpen.closeOnFocusLost": false,
    "workbench.quickOpen.preserveInput": true,
    "workbench.editor.historyBasedLanguageDetection": false,
    "workbench.settings.enableNaturalLanguageSearch": false,
    "search.showLineNumbers": true,
    "debug.console.acceptSuggestionOnEnter": "on",
    "terminal.integrated.tabs.enabled": false,
    "omnisharp.enableDecompilationSupport": true,
    "omnisharp.useEditorFormattingSettings": false,
    "omnisharp.enableEditorConfigSupport": true,
    "git.autoRepositoryDetection": "openEditors",
    "workbench.colorCustomizations": {
        "editor.lineHighlightBackground": "#1073cf2d",
        "editor.lineHighlightBorder": "#9fced11f"
    },
    "editor.inlayHints.enabled": "on",
    "editor.guides.indentation": true,
    "diffEditor.wordWrap": "off",
    "editor.wordWrap": "off",
    "workbench.iconTheme": "material-icon-theme",
    "dotnet.inlayHints.enableInlayHintsForParameters": true,
    "dotnet.inlayHints.enableInlayHintsForLiteralParameters": true,
    "dotnet.inlayHints.enableInlayHintsForIndexerParameters": true,
    "dotnet.inlayHints.enableInlayHintsForObjectCreationParameters": true,
    "dotnet.inlayHints.enableInlayHintsForOtherParameters": true,
    "dotnet.inlayHints.suppressInlayHintsForParametersThatDifferOnlyBySuffix": true,
    "dotnet.inlayHints.suppressInlayHintsForParametersThatMatchMethodIntent": true,
    "dotnet.inlayHints.suppressInlayHintsForParametersThatMatchArgumentName": true,
    "dotnet.completion.showCompletionItemsFromUnimportedNamespaces": true,
    "csharp.inlayHints.enableInlayHintsForTypes": true,
    "csharp.inlayHints.enableInlayHintsForImplicitVariableTypes": true,
    "csharp.inlayHints.enableInlayHintsForLambdaParameterTypes": true,
    "csharp.inlayHints.enableInlayHintsForImplicitObjectCreation": true,
    "csharp.debug.console": "internalConsole",
    "csharp.debug.logging.diagnosticsLog.debugRuntimeEventTracing": true,
    "csharp.debug.logging.diagnosticsLog.protocolMessages": true,
    "window.density.editorTabHeight": "compact",
    "debug.showSubSessionsInToolBar": true,
    "explorer.fileNesting.enabled": true,
    "explorer.fileNesting.expand": false,
    "workbench.layoutControl.enabled": false,
    "workbench.activityBar.location": "hidden",
    "editor.codeActionWidget.includeNearbyQuickFixes": true,
    "workbench.editor.wrapTabs": true,
    "workbench.editor.highlightModifiedTabs": true,
    "workbench.editor.pinnedTabsOnSeparateRow": true,
    "workbench.editor.scrollToSwitchTabs": true,
    "explorer.autoReveal": false,
    "multiDiffEditor.experimental.enabled": true,
    "scm.diffDecorationsGutterPattern": {
        "added": true
    },
    "notebook.diff.overviewRuler": true,
    "diffEditor.hideUnchangedRegions.enabled": true,
    "diffEditor.experimental.showMoves": true,
    "editor.minimap.renderCharacters": false,
    "editor.minimap.maxColumn": 40,
    "editor.suggest.preview": true,
    "remote.autoForwardPortsSource": "hybrid",
    "evenBetterToml.formatter.columnWidth": 80,
    "editor.scrollbar.verticalScrollbarSize": 2,
    "workbench.editor.doubleClickTabToToggleEditorGroupSizes": "maximize",
    "screencastMode.fontSize": 30,
    "omnisharp.disableMSBuildDiagnosticWarning": true,
    "csharp.suppressDotnetRestoreNotification": true,
    "gitlens.cloudPatches.enabled": false,
    "notebook.diff.ignoreOutputs": true,
    "search.seedOnFocus": true,
    "scm.alwaysShowRepositories": true,
    "terminal.integrated.defaultLocation": "editor",
    "terminal.integrated.enableImages": true,
    "lldb.launch.terminal": "integrated",
    "workbench.editor.autoLockGroups": {
        "workbench.editorinputs.searchEditorInput": true
    },
    "workbench.tree.stickyScrollMaxItemCount": 15,
    "workbench.tree.indent": 4,
    "scm.inputMaxLineCount": 20,
    "files.exclude": {
        "**/.venv*": true
    },
    "workbench.editor.enablePreviewFromCodeNavigation": true,
    "gitlens.codeLens.scopes": [
        "document",
        "containers",
        "blocks"
    ],
    "gitlens.gitCommands.skipConfirmations": [
        "fetch:command",
        "switch:command",
        "stash-push:command"
    ],
    "activitusbar.views": [
        {
            "name": "command.workbench.files.action.focusFilesExplorer",
            "key": "ctrl+shift+E",
            "mac": "shift+cmd+E",
            "codicon": "explorer-view-icon"
        },
        {
            "name": "command.workbench.view.debug",
            "key": "ctrl+shift+D",
            "mac": "shift+cmd+D",
            "codicon": "run-view-icon"
        },
        {
            "name": "command.workbench.view.testing.focus",
            "codicon": "beaker"
        },
        {
            "name": "command.workbench.view.extensions",
            "key": "ctrl+shift+X",
            "mac": "shift+cmd+X",
            "codicon": "extensions-view-icon"
        },
        {
            "name": "command.gitlens.views.scm.grouped.focus",
            "codicon": "root-folder"
        },
        {
            "codicon": "blank"
        },
        {
            "name": "settings",
            "codicon": "gear"
        },
        {
            "name": "command.workbench.view.scm",
            "codicon": "search-stop"
        },
        {
            "name": "command.workbench.action.terminal.focus",
            "codicon": "remote-explorer"
        },
        {
            "name": "command.workbench.action.createTerminalEditor",
            "codicon": "terminal"
        },
        {
            "name": "command.workbench.experimental.requestUsbDevice",
            "codicon": "terminal-bash"
        },
        {
            "name": "command.workbench.panel.output.focus",
            "codicon": "output"
        },
        {
            "name": "command.dockerContainers.focus",
            "codicon": "layers"
        },
        {
            "name": "command.workbench.action.navigateBack",
            "codicon": "arrow-left"
        },
        {
            "name": "command.workbench.action.navigateForward",
            "codicon": "arrow-right"
        },
        {
            "name": "command.outline.focus",
            "codicon": "bracket-dot"
        }
    ],
    "launch": {
        "configurations": [
            {
                "name": "LLDB Attach",
                "type": "lldb",
                "request": "attach",
                "pid": "${command:pickMyProcess}"
            },
            {
                "cwd": "${workspaceRoot:zephyr}",
                "executable": "build/zephyr/zephyr.elf",
                "type": "gdb",
                "request": "attach",
                "name": "Zephyr gdbserver",
                "target": ":3333",
                "gdbpath": "gdb-multiarch",
                "remote": true,
            },
        ],
        "compounds": [],
    },
    // updated 2025-08-11 06:54
    // https://github.com/antfu/vscode-file-nesting-config
    "explorer.fileNesting.patterns": {
        ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
        ".env": "*.env, .env.*, .envrc, env.d.ts",
        ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .lfsconfig, .mailmap, .git-blame*",
        ".project": ".classpath",
        "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",
        "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",
        "ansible.cfg": "ansible.cfg, .ansible-lint, requirements.yml",
        "app.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, content.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
        "application.properties": "*.properties",
        "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, content.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, server.php, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
        "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, content.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
        "build-wrapper.log": "build-wrapper*.log, build-wrapper-dump*.json, build-wrapper-win*.exe, build-wrapper-linux*, build-wrapper-macosx*",
        "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, .bazelversion, MODULE.bazel.lock, WORKSPACE",
        "Cargo.toml": ".clippy.toml, .rustfmt.toml, Cargo.Bazel.lock, Cargo.lock, clippy.toml, cross.toml, insta.yaml, rust-toolchain.toml, rustfmt.toml",
        "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json, CMakeCache.txt",
        "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
        "default.nix": "shell.nix",
        "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
        "Dockerfile": "*.dockerfile, .devcontainer.*, .dockerignore, captain-definition, compose.*, docker-compose.*, dockerfile*",
        "flake.nix": "flake.lock",
        "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, content.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
        "gemfile": ".ruby-version, gemfile.lock",
        "go.mod": ".air*, go.sum",
        "go.work": "go.work.sum",
        "hatch.toml": ".editorconfig, .flake8, .isort.cfg, .python-version, hatch.toml, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
        "I*.cs": "$(capture).cs",
        "Makefile": "*.mk",
        "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
        "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, content.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, next-i18next.config.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
        "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .nuxtignore, .nuxtrc, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, content.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
        "package.json": "*.code-workspace, .browserslist*, .circleci*, .commitlint*, .cspell*, .cursor*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .ls-lint.yml, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .oxlintrc.json, .oxlintrc.json.bak, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .shellcheckrc, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .windsurfrules, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json*, bower.json, build.config.*, bun.lock, bun.lockb, bunfig.toml, colada.options.ts, commitlint*, crowdin*, cspell*, dangerfile*, dlint.json, dprint.json*, ec.config.*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lefthook.*, lerna*, lint-staged*, nest-cli.*, netlify*, nixpacks*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rolldown.config.*, rollup.config.*, rspack*, ruff.toml, sentry.*.config.ts, simple-git-hooks*, sonar-project.properties, stylelint*, taze.config.*, tsdown.config.*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, wrangler.*, xo.config.*, yarn*",
        "Pipfile": ".editorconfig, .flake8, .isort.cfg, .python-version, Pipfile, Pipfile.lock, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
        "pom.xml": "mvnw*",
        "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
        "pyproject.toml": ".commitlint*, .cspell*, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .flake8, .flowconfig, .isort.cfg, .jslint*, .lintstagedrc*, .ls-lint.yml, .markdownlint*, .oxlintrc.json, .oxlintrc.json.bak, .pdm-python, .pdm.toml, .prettier*, .pylintrc, .python-version, .ruff.toml, .shellcheckrc, .stylelint*, .textlint*, .xo-config*, .yamllint*, MANIFEST.in, Pipfile, Pipfile.lock, biome.json*, commitlint*, cspell*, dangerfile*, dlint.json, dprint.json*, eslint*, hatch.toml, lint-staged*, pdm.lock, phpcs.xml, poetry.lock, poetry.toml, prettier*, pyproject.toml, pyrightconfig.json, requirements*.in, requirements*.pip, requirements*.txt, ruff.toml, setup.cfg, setup.py, stylelint*, tox.ini, tslint*, uv.lock, uv.toml, xo.config.*",
        "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, content.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
        "readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README-*, README_*, RELEASE_NOTES*, ROADMAP.MD, Readme-*, Readme_*, Release_Notes*, Roadmap.md, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme-*, readme_*, release_notes*, roadmap.md, security.md, sponsors*",
        "Readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README-*, README_*, RELEASE_NOTES*, ROADMAP.MD, Readme-*, Readme_*, Release_Notes*, Roadmap.md, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme-*, readme_*, release_notes*, roadmap.md, security.md, sponsors*",
        "README*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README-*, README_*, RELEASE_NOTES*, ROADMAP.MD, Readme-*, Readme_*, Release_Notes*, Roadmap.md, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme-*, readme_*, release_notes*, roadmap.md, security.md, sponsors*",
        "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, content.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, remix.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
        "requirements.txt": ".editorconfig, .flake8, .isort.cfg, .python-version, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
        "rush.json": "*.code-workspace, .browserslist*, .circleci*, .commitlint*, .cspell*, .cursor*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .ls-lint.yml, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .oxlintrc.json, .oxlintrc.json.bak, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .shellcheckrc, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .windsurfrules, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json*, bower.json, build.config.*, bun.lock, bun.lockb, bunfig.toml, colada.options.ts, commitlint*, crowdin*, cspell*, dangerfile*, dlint.json, dprint.json*, ec.config.*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lefthook.*, lerna*, lint-staged*, nest-cli.*, netlify*, nixpacks*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rolldown.config.*, rollup.config.*, rspack*, ruff.toml, sentry.*.config.ts, simple-git-hooks*, sonar-project.properties, stylelint*, taze.config.*, tsdown.config.*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, wrangler.*, xo.config.*, yarn*",
        "sanity.config.*": "sanity.cli.*, sanity.types.ts, schema.json",
        "setup.cfg": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, tox.ini",
        "setup.py": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, setup.py, tox.ini",
        "shims.d.ts": "*.d.ts",
        "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, content.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
        "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, content.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
        "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, content.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
        "*.asax": "$(capture).*.cs, $(capture).*.vb",
        "*.ascx": "$(capture).*.cs, $(capture).*.vb",
        "*.ashx": "$(capture).*.cs, $(capture).*.vb",
        "*.aspx": "$(capture).*.cs, $(capture).*.vb",
        "*.axaml": "$(capture).axaml.cs",
        "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
        "*.c": "$(capture).h",
        "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
        "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
        "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
        "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
        "*.cs": "$(capture).*.cs, $(capture).cs.uid",
        "*.cshtml": "$(capture).cshtml.cs, $(capture).cshtml.css",
        "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
        "*.css": "$(capture).css.map, $(capture).*.css",
        "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
        "*.dart": "$(capture).freezed.dart, $(capture).g.dart, $(capture).mapper.dart",
        "*.db": "*.db-shm, *.db-wal",
        "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
        "*.fs": "$(capture).fs.js, $(capture).fs.js.map, $(capture).fs.jsx, $(capture).fs.ts, $(capture).fs.tsx, $(capture).fs.rs, $(capture).fs.php, $(capture).fs.dart",
        "*.gd": "$(capture).gd.uid",
        "*.gdshader": "$(capture).gdshader.uid",
        "*.gdshaderinc": "$(capture).gdshaderinc.uid",
        "*.go": "$(capture)_test.go",
        "*.java": "$(capture).class",
        "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js, $(capture).d.ts, $(capture).d.ts.map, $(capture).js.flow",
        "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx, $(capture).css, $(capture).module.css, $(capture).less, $(capture).module.less, $(capture).module.less.d.ts, $(capture).scss, $(capture).module.scss, $(capture).module.scss.d.ts",
        "*.master": "$(capture).*.cs, $(capture).*.vb",
        "*.md": "$(capture).*",
        "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
        "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
        "*.mts": "$(capture).mts.map, $(capture).*.mts, $(capture)_*.mts",
        "*.proto": "$(capture).pb.go, $(capture).pb.micro.go",
        "*.pubxml": "$(capture).pubxml.user",
        "*.py": "$(capture).pyi",
        "*.razor": "$(capture).razor.cs, $(capture).razor.css, $(capture).razor.scss",
        "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
        "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).bbl-SAVE-ERROR, $(capture).bcf, $(capture).bib, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).nav, $(capture).out, $(capture).run.xml, $(capture).snm, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
        "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
        "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx, $(capture).css, $(capture).module.css, $(capture).less, $(capture).module.less, $(capture).module.less.d.ts, $(capture).scss, $(capture).module.scss, $(capture).module.scss.d.ts, $(capture).css.ts",
        "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
        "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
        "*.w": "$(capture).*.w, I$(capture).w",
        "*.wat": "$(capture).wasm",
        "*.xaml": "$(capture).xaml.cs"
    },
    "workbench.editor.alwaysShowEditorActions": true,
    "debug.showVariableTypes": true,
    "debug.focusEditorOnBreak": false,
    "debug.focusWindowOnBreak": false,
    "markdown.preview.scrollEditorWithPreview": false,
    "markdown.preview.scrollPreviewWithEditor": false,
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "dotnetAcquisitionExtension.enableTelemetry": false,
    "dotnetAcquisitionExtension.existingDotnetPath": [
        {
            "extensionId": "icsharpcode.ilspy-vscode",
            "path": "/usr/share/dotnet/dotnet"
        }
    ],
    "xml.server.vmargs": "-Xmx1024M",
    "xml.codeLens.enabled": true,
    "xml.foldings.includeClosingTagInFold": true,
    "xml.symbols.maxItemsComputed": 10000,
    "workbench.editorLargeFileConfirmation": 100,
    "[xml]": {
        "editor.defaultFormatter": "redhat.vscode-xml"
    },
    "diffEditor.maxComputationTime": 0,
    "workbench.startupEditor": "none",
    "[typescript]": {
        "editor.defaultFormatter": "vscode.typescript-language-features"
    },
    "files.readonlyFromPermissions": true,
    "workbench.commandPalette.experimental.suggestCommands": true,
    "workbench.commandPalette.preserveInput": true,
    "workbench.reduceMotion": "on",
    "workbench.tree.expandMode": "doubleClick",
    "editor.unicodeHighlight.nonBasicASCII": true,
    "gitlens.views.repositories.showStashes": true,
    "workbench.panel.showLabels": false,
    "files.associations": {
        "*.wara": "toml"
    },
    "workbench.list.scrollByPage": true,
    "workbench.list.defaultFindMode": "filter",
    "workbench.list.defaultFindMatchType": "contiguous",
    "workbench.view.showQuietly": {
        "workbench.panel.output": true
    },
    "workbench.editor.limit.enabled": true,
    "workbench.editor.limit.excludeDirty": true,
    "workbench.editor.limit.perEditorGroup": true,
    "workbench.editor.limit.value": 5,
    "window.commandCenter": false,
    "explorer.incrementalNaming": "simple",
    "testing.coverageToolbarEnabled": true,
    "robotcode.analysis.findUnusedReferences": true,
    "robotcode.analysis.referencesCodeLens": true,
    "robotcode.analysis.diagnosticModifiers.ignore": [
        "KeywordNotFound"
    ],
    "csharp.debug.justMyCode": false,
    "csharp.debug.symbolOptions.searchMicrosoftSymbolServer": true,
    "csharp.debug.symbolOptions.searchNuGetOrgSymbolServer": true,
    "csharp.debug.requireExactSource": false,
    "explorer.excludeGitIgnore": true,
}